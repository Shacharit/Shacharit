buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.google.appengine:gradle-appengine-plugin:1.9.28'
    }
}

repositories {
    jcenter();
}

apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'appengine'

sourceCompatibility = JavaVersion.VERSION_1_7
targetCompatibility = JavaVersion.VERSION_1_7

dependencies {
    appengineSdk 'com.google.appengine:appengine-java-sdk:1.9.28'
    compile 'javax.servlet:servlet-api:2.5'
    compile 'com.google.appengine:appengine-api-1.0-sdk:1.9.28'
    compile 'com.firebase:firebase-client-jvm:2.5.2'
    compile 'org.apache.httpcomponents:httpclient:4.0.1'
    compile 'com.google.firebase:firebase-server-sdk:3.0.+'
    compile 'com.fasterxml.jackson.core:jackson-annotations:2.7.4'
    testCompile 'org.hamcrest:hamcrest-all:1.3'
    testCompile 'org.mockito:mockito-all:1.9.5'
    testCompile 'junit:junit:4.12'
}

sourceSets {
    integrationTest {
        java {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDir 'src/integrationTest/java'
        }
        resources {
            srcDir 'src/integrationTest/resources'
        }
    }
}

configurations {
    integrationTestCompile.extendsFrom testCompile
    integrationTestRuntime.extendsFrom testRuntime
}

task integrationTest(type: Test) {
    testClassesDir = project.sourceSets.integrationTest.output.classesDir
    classpath = project.sourceSets.integrationTest.runtimeClasspath
    it.shouldRunAfter test
}

appengine {
    downloadSdk = true
    appcfg {
        oauth2 = true
    }
}

def buildMachine = System.getenv('BUILD_MACHINE')
println buildMachine
